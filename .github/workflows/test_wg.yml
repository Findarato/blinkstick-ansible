# This is a basic workflow to help you get started with Actions

name: blinkstick-ansible-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Install wireguard
        run: sudo apt-get install wireguard

      - name: Create wireguard tunnel configuration
        run: |
          sed -i -e "s@{{WIREGUARD_PRIVATE_KEY}}@${{ secrets.WIREGUARD_PRIVATE_KEY }}@" $GITHUB_WORKSPACE/.github/workflows/tunnel.conf
          sed -i -e "s@{{WIREGUARD_SERVER_PUBLIC_KEY}}@${{ secrets.WIREGUARD_SERVER_PUBLIC_KEY }}@" $GITHUB_WORKSPACE/.github/workflows/tunnel.conf
          sed -i -e "s@{{WIREGUARD_PRIVATE_IP}}@${{ secrets.WIREGUARD_PRIVATE_IP }}@" $GITHUB_WORKSPACE/.github/workflows/tunnel.conf
          sed -i -e "s@{{WIREGUARD_SERVER_ENDPOINT}}@${{ secrets.WIREGUARD_SERVER_ENDPOINT }}@" $GITHUB_WORKSPACE/.github/workflows/tunnel.conf
          sudo cp $GITHUB_WORKSPACE/.github/workflows/tunnel.conf /etc/wireguard/

      - name: Deploy the package
        run: |
          wg-quick up tunnel

      - name: Setup SSH
        id: ssh
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          hosts=("192.168.0.81" "192.168.0.82" "192.168.0.83" "192.168.0.84")
          mkdir -p ~/.ssh
          for i in ${hosts[@]};
          do
            ssh-keyscan ${i} >> ~/.ssh/known_hosts
            printf "%s" "${SSH_KEY}" > ~/.ssh/key
            chmod 600 ~/.ssh/key
            ping -c 3 ${i}
          done

      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.4.0
        with:
          playbook: main.yaml
          directory: ./
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: |
            [all]
            192.168.0.81 serial=BS039450-3.0
            192.168.0.82 serial=BS039442-3.0
            192.168.0.83 serial=BS039438-3.0
            192.168.0.84 serial=BS039441-3.0
            
            [all:vars]
            ansible_user=pi
          options: |
            --verbose
            --tags "get-info,install,cpu-usage,internet-status,rave,base-config,turnoff"

      - name: confirmation
        run: |
          echo "Tests completed successfully..."